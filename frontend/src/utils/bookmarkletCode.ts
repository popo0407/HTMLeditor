/**
 * 会議情報取得ブックマークレットのコード定義
 * Teams会議から会議情報、参加者、文字起こしを自動取得する
 */

export const BOOKMARKLET_CODE = [
  'javascript:(function(){',
  'const wait=(ms)=>new Promise(res=>setTimeout(res,ms));',
  'const createProgressWindow=()=>{',
  'const overlay=document.createElement("div");',
  'overlay.id="meeting-progress-overlay";',
  'overlay.style.cssText="position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:10000;display:flex;justify-content:center;align-items:center;";',
  'const window=document.createElement("div");',
  'window.style.cssText="background:white;padding:20px;border-radius:10px;box-shadow:0 4px 20px rgba(0,0,0,0.3);min-width:300px;text-align:center;font-family:Arial,sans-serif;";',
  'const title=document.createElement("h3");',
  'title.textContent="会議情報取得中...";',
  'title.style.cssText="margin:0 0 15px 0;color:#333;";',
  'const status=document.createElement("div");',
  'status.id="progress-status";',
  'status.style.cssText="margin:10px 0;color:#666;font-size:14px;";',
  'const progress=document.createElement("div");',
  'progress.style.cssText="width:100%;height:6px;background:#f0f0f0;border-radius:3px;margin:15px 0;overflow:hidden;";',
  'const progressBar=document.createElement("div");',
  'progressBar.id="progress-bar";',
  'progressBar.style.cssText="width:0%;height:100%;background:linear-gradient(90deg,#4CAF50,#45a049);transition:width 0.3s ease;border-radius:3px;";',
  'progress.appendChild(progressBar);',
  'window.appendChild(title);',
  'window.appendChild(status);',
  'window.appendChild(progress);',
  'overlay.appendChild(window);',
  'document.body.appendChild(overlay);',
  'return{updateStatus:(text)=>{document.getElementById("progress-status").textContent=text;},updateProgress:(percent)=>{document.getElementById("progress-bar").style.width=percent+"%";},close:()=>{document.body.removeChild(overlay);}};',
  '};',
  'const waitForElement=async(selector,maxWaitTime=20000)=>{',
  'const startTime=Date.now();',
  'while(Date.now()-startTime<maxWaitTime){',
  'const element=document.querySelector(selector);',
  'if(element){await wait(1000);return element;}',
  'await wait(1000);',
  '}',
  'throw new Error(selector+" が見つかりませんでした");',
  '};',
  '(async()=>{',
  'const progressWindow=createProgressWindow();',
  'try{',
  'let cachedData=null;',
  'try{',
  'progressWindow.updateStatus("クリップボード情報を取得中...");',
  'const clipboardText=await navigator.clipboard.readText();',
  'try{cachedData=JSON.parse(clipboardText);}catch(_){throw new Error("HTMLEditorからチャット画面を開いてください");}',
  'if(typeof cachedData!=="object"){throw new Error("HTMLEditorからチャット画面を開いてください");}',
  'progressWindow.updateStatus("クリップボード情報取得成功");',
  'progressWindow.updateProgress(5);',
  '}catch(e){progressWindow.close();alert("❌ "+e.message);return;}',
  'progressWindow.updateStatus("会議詳細ボタンを探しています...");',
  'progressWindow.updateProgress(10);',
  'let detailBtn=await waitForElement("button[data-tid=\\"chat-meeting-details\\"]");',
  'detailBtn.click();',
  'progressWindow.updateStatus("会議詳細を開きました");',
  'progressWindow.updateProgress(20);',
  'progressWindow.updateStatus("会議タイトルを取得中...");',
  'await wait(2000);',
  'let titleEl=await waitForElement("span[data-tid=\\"calv2-sf-meeting-subject-view\\"]");',
  'let title=titleEl?.innerText||null;',
  'progressWindow.updateProgress(30);',
  'progressWindow.updateStatus("参加者情報を取得中...");',
  'let participants=[...document.querySelectorAll("div.ms-TooltipHost")].map(el=>el.innerText);',
  'progressWindow.updateProgress(40);',
  'progressWindow.updateStatus("まとめボタンを探しています...");',
  'let summaryBtn=await waitForElement("div[data-tid=\\"data-tid-まとめ\\"]");',
  'summaryBtn.click();',
  'progressWindow.updateStatus("まとめを開きました");',
  'progressWindow.updateProgress(50);',
  'progressWindow.updateStatus("日時情報を取得中...");',
  'await wait(2000);',
  'let datetime=[...document.querySelectorAll("span.fui-StyledText")].map(el=>el.innerText).filter(t=>/\\d/.test(t));',
  'progressWindow.updateProgress(60);',
  'progressWindow.updateStatus("文字起こしボタンを探しています...");',
  'let transcriptBtn=await waitForElement("button[data-tid=\\"Transcript\\"]");',
  'transcriptBtn.click();',
  'progressWindow.updateStatus("文字起こしを開きました");',
  'progressWindow.updateProgress(70);',
  'progressWindow.updateStatus("文字起こし内容を読み込み中...");',
  'await wait(3000);',
  'const c=await waitForElement("[data-is-scrollable=\\"true\\"]");',
  'let transcript="";',
  'if(c){',
  'progressWindow.updateStatus("文字起こしを解析中...");',
  'let entries=[];',
  'let processedContent=new Set();',
  'const addEntries=(elements)=>{',
  'for(const e of elements){',
  'let s="（システム）",t="",msg="";',
  'const a=e.getAttribute("aria-label")||"";',
  'const m=a.match(/^(.+?)\\s+\\d/);',
  'if(m){s=m[1].trim();}else{const n=e.closest("[class*=\\"rightColumn-\\"]")?.querySelector("[class*=\\"itemDisplayName-\\"]");if(n)s=n.textContent.trim();}',
  'const tsEl=e.closest("[class*=\\"rightColumn-\\"]")?.querySelector("[id^=\\"Header-timestamp-\\"]");',
  'if(tsEl)t=tsEl.textContent.trim();',
  'const msgEl=e.querySelector("[id^=\\"sub-entry-\\"]");',
  'if(msgEl){msg=Array.from(msgEl.childNodes).filter(n=>n.nodeType===3).map(n=>n.textContent.trim()).join(" ");}',
  'if(!msg)continue;',
  'const uniqueKey=s+"|"+t+"|"+msg;',
  'if(processedContent.has(uniqueKey))continue;',
  'processedContent.add(uniqueKey);',
  'entries.push({speaker:s,time:t,content:msg});',
  '}',
  '};',
  'c.scrollTop=0;',
  'await wait(1000);',
  'addEntries(c.querySelectorAll("div[class*=\\"rightColumn-\\"]"));',
  'const totalHeight=c.scrollHeight;',
  'const viewHeight=c.clientHeight;',
  'const scrollStep=viewHeight*1.5;',
  'let currentScroll=0,loop=0;',
  'progressWindow.updateProgress(75);',
  'while(currentScroll<totalHeight&&loop<200){',
  'loop++;',
  'currentScroll+=scrollStep;',
  'c.scrollTop=currentScroll;',
  'await wait(300);',
  'progressWindow.updateStatus("文字起こしをスクロール中... ("+loop+")");',
  'if(Math.abs(c.scrollTop-currentScroll)>100){c.scrollTop=currentScroll;await wait(300);}',
  'addEntries(c.querySelectorAll("div[class*=\\"rightColumn-\\"]"));',
  'if(currentScroll>=totalHeight-viewHeight)break;',
  '}',
  'progressWindow.updateProgress(85);',
  'progressWindow.updateStatus("最終チェック中...");',
  'c.scrollTop=c.scrollHeight;',
  'await wait(2000);',
  'addEntries(c.querySelectorAll("div[class*=\\"rightColumn-\\"]"));',
  'entries.sort((a,b)=>{',
  'const timeA=a.time.split(":").reduce((acc,time)=>60*acc+parseInt(time,10),0);',
  'const timeB=b.time.split(":").reduce((acc,time)=>60*acc+parseInt(time,10),0);',
  'return timeA-timeB;',
  '});',
  'let lastSpeaker="";',
  'for(const entry of entries){',
  'if(entry.speaker==="（システム）"&&lastSpeaker){transcript+=entry.content+"\\n\\n";}',
  'else{if(entry.speaker!=="（システム）"){lastSpeaker=entry.speaker;}',
  'transcript+=entry.speaker+(entry.time?" ["+entry.time+"]":"")+":\\n"+entry.content+"\\n\\n";}',
  '}',
  '}',
  'progressWindow.updateProgress(95);',
  'progressWindow.updateStatus("結果を処理中...");',
  'let result={title,participants,datetime,transcript,Department:cachedData.Department,Issuer:cachedData.Issuer,typoCorrectionList:cachedData.typoCorrectionList};',
  'if(!transcript){progressWindow.close();alert("❌ 会議情報を取得できませんでした");}',
  'else{',
  'try{',
  'await navigator.clipboard.writeText(JSON.stringify(result,null,2));',
  'progressWindow.updateProgress(100);',
  'progressWindow.updateStatus("完了！");',
  'setTimeout(()=>{',
  'progressWindow.close();',
  'alert("✅ 完了！会議情報と誤字修正リストを取得し、クリップボードにコピーしました");',
  'window.open("https://d3r0xupf0a2onu.cloudfront.net/use-case-builder/execute/6fadf23d-6d52-4029-a3bb-73a3b9f09cb2","_blank");',
  '},1000);',
  '}catch(clipboardError){progressWindow.close();alert("❌ クリップボードコピー失敗");}',
  '}',
  'console.log("最終結果:",result);',
  '}catch(e){progressWindow.close();console.error("詳細エラー:",e);alert("❌ 取得失敗: "+(e.message||"unknown error"));}',
  '})().catch(e=>{console.error("❌ 外側Promiseエラー:",e);});',
  '})();'
].join('');
