#!/usr/bin/env node
/**
 * PDF CSS同期スクリプト
 * frontend/src/styles/pdf.css を以下にコピーします:
 * 1. backend/templates/pdf.css (PDF生成用)
 * 2. public/editor-styles.css (TinyMCE用)
 */

const fs = require('fs');
const path = require('path');

const sourcePath = path.join(__dirname, '..', 'src', 'styles', 'pdf.css');
const backendTargetPath = path.join(__dirname, '..', '..', 'backend', 'templates', 'pdf.css');
const publicTargetPath = path.join(__dirname, '..', 'public', 'editor-styles.css');

try {
  // ソースファイルの存在確認
  if (!fs.existsSync(sourcePath)) {
    console.error(`エラー: ソースファイルが見つかりません: ${sourcePath}`);
    process.exit(1);
  }

  const cssContent = fs.readFileSync(sourcePath, 'utf8');

  // 1. バックエンド用ファイルの作成
  const backendDir = path.dirname(backendTargetPath);
  if (!fs.existsSync(backendDir)) {
    fs.mkdirSync(backendDir, { recursive: true });
    console.log(`ディレクトリを作成しました: ${backendDir}`);
  }

  const backendContent = `/* Copied from frontend/src/styles/pdf.css at build time
   Backend will inline this CSS into the PDF template so wkhtmltopdf
   renders the same styles as the frontend TinyMCE preview.
   
   DO NOT EDIT THIS FILE DIRECTLY - EDIT frontend/src/styles/pdf.css INSTEAD
*/
${cssContent}`;

  fs.writeFileSync(backendTargetPath, backendContent, 'utf8');

  // 2. public用ファイルの作成（TinyMCEが参照）
  const publicDir = path.dirname(publicTargetPath);
  if (!fs.existsSync(publicDir)) {
    fs.mkdirSync(publicDir, { recursive: true });
    console.log(`ディレクトリを作成しました: ${publicDir}`);
  }

  const publicContent = `/* Copied from frontend/src/styles/pdf.css at build time
   TinyMCE editor will load this CSS file to match PDF output styles.
   
   DO NOT EDIT THIS FILE DIRECTLY - EDIT frontend/src/styles/pdf.css INSTEAD
*/
${cssContent}`;

  fs.writeFileSync(publicTargetPath, publicContent, 'utf8');
  
  console.log(`✅ PDF CSS同期完了:`);
  console.log(`   マスター: ${sourcePath} (${cssContent.length} bytes)`);
  console.log(`   → バックエンド: ${backendTargetPath}`);
  console.log(`   → TinyMCE用: ${publicTargetPath}`);
  
} catch (error) {
  console.error(`❌ PDF CSS同期エラー:`, error.message);
  process.exit(1);
}
